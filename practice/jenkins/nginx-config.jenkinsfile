properties([
    parameters([
        booleanParam(name: "release", defaultValue: false, description: "请选择是否发布"),
        choice(name: "env", choices: ["prod", "test", "dev"], description: "请选择环境"),
        [
            $class: 'CascadeChoiceParameter',
            name: 'hosts',
            referencedParameters: "env",
            choiceType: "PT_CHECKBOX",
            script: [
                $class: 'GroovyScript',
                fallbackScript: [classpath: [], sandbox: true, script: 'return ["请选择环境"]'],
                script: [
                    classpath: [],
                    sandbox: true,
                    script: """
                        if (env == 'prod') {
                            return [
                                '192.168.110.137',
                                '192.168.110.135'
                            ]
                        } else if (env == 'test') {
                            return [
                                '192.168.110.137',
                                '192.168.110.135'
                            ]
                        } else if (env == 'dev') {
                            return [
                                '192.168.110.137',
                                '192.168.110.135'
                            ]
                        } else {
                            return ['请选择环境']
                        }
                    """
                ]
            ],
            description: "请选择主机"
        ],
        booleanParam(name: "have", defaultValue: false, description: "是否有证书"),
        text(name: "ssl", defaultValue: 
"""sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/nginx/ssl/${params.domain}/private.key \
    -out /etc/nginx/ssl/${params.domain}/certificate.crt \
    -subj "/CN=${params.domain}"
        """, description: "请输入/生成证书"),
        text(name: "config", defaultValue: 
"""# HTTPS server
server {
    listen 1443 ssl;
    server_name ${params.domain};
    access_log /var/log/nginx/${params.domain}.access.log json_combined;
    error_log /var/log/nginx/${params.domain}.error.log warn;
    
    # 证书文件路径
    ssl_certificate /etc/nginx/ssl/${params.domain}/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/${params.domain}/private.key;
    
    # SSL优化配置
    ssl_protocols TLSv1.2 TLSv1.3;                     # 只允许TLS1.2和1.3协议，禁用不安全的老版本
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;  # 使用强加密套件
    ssl_prefer_server_ciphers on;                      # 优先使用服务器的加密套件
    ssl_session_cache shared:SSL:10m;                  # SSL会话缓存，提高性能
    ssl_session_timeout 10m;                           # 缓存会话的超时时间
    ssl_stapling on;                                   # 启用OCSP Stapling
    ssl_stapling_verify on;                           # 验证OCSP响应
    
    
    # 添加location配置
    location / {
        proxy_pass http://yuyang_admin_fronend;
        proxy_http_version 1.1;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

        location /admin3/ {
        proxy_pass http://yuyang_admin_backend;
        proxy_http_version 1.1;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# 将HTTP请求重定向到HTTPS - 优化后的配置
server {
    listen 180;
    server_name ${params.domain};
    # 301永久重定向，明确指定端口1443
    return 301 https://\$server_name:1443\$request_uri;
}

upstream yuyang_admin_backend {
    server 192.168.110.137:9004 max_fails=3 fail_timeout=30s;
}

upstream yuyang_admin_fronend {
    server 192.168.110.137:9003 max_fails=3 fail_timeout=30s;
}
        """, description: "请输入Nginx配置"),
        text(name: "command", defaultValue: 
"""nginx -t
nginx -s reload
        """, description: "请输入启动命令")
    ])
])
pipeline {
    agent any
    parameters {
        string(name: "domain", defaultValue: "yuyang.admin.labworlds.cc", description: "请输入域名")
    }
    stages {
        stage("证书生成阶段") {
            when {
                expression {params.release == true}
            }
            steps {
                echo "生成证书：${params.ssl}"
                echo "配置信息：${params.config}"
                echo "启动命令：${params.command}"
            }
        }
    }
}